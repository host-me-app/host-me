rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /apartments/{listing} {
    //	function isOwner(user) {
    //  	return $(listing).uid == user;
    //  }
    //  function requiredFieldsExist() {
    //  	return request.resource.data.name is string &&
    //    	request.resource.data.room is string &&
    //      request.resource.data.address is string &&
    //      request.resource.data.rent is number &&
    //      request.resource.data.occupants is number &&
    //      request.resource.data.area is number &&
    //      request.resource.data.furnsihed is bool &&
    //      request.resource.data.bath is string &&
    //      request.resource.data.kitchen is string &&
    //      request.resource.data.laundry is string &&
    //      request.resource.data.pet is bool &&
    //      request.resource.data.images is path &&
    //      request.resource.data.available is bool &&
    //      request.resource.data.proprietor is string &&
    //      request.resource.data.uid is string &&
    //      request.resource.data.utilities is number &&
    //      request.resource.data.deposit is number &&
    //      request.resource.data.duration is number &&
    //      request.resource.data.currentLease is timestamp;
    //  }
    //  function validateData() {
    //  	let ownership = ["none", "private", "shared"];
    //  	return request.resource.data.rent > 0 &&
    //    	request.resource.data.occupants > 0 &&
    //    	request.resource.data.area > 0 &&
    //      request.resource.data.bath in ownership[1:] &&
    //      request.resource.data.kitchen in ownership &&
    //      request.resource.data.laundry in ownership &&
    //      request.resource.data.duration > 0;
    //  }
    //   
  		allow read, write;
    	// allow read: if request.auth != null;
      // allow create: if isOwner(request.auth.uid) &&
      //	requiredFieldsExist() &&
      //  validateData();
      // allow update: if isOwner(request.auth.uid) &&
      //	validateData();
      // allow delete: if isOwner(request.auth.uid);
    }
    match /users/{user} {
      allow read, write;
    }
  }
}